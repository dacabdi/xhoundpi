name: Bump version

on:
  pull_request:
    branches:
      - master
    types:
      - closed
    paths-ignore:
      - '.bumpversion.cfg'
      - 'setup.py'

env:
  ENV_FILE: .env

jobs:

  bumpversion:
    if: github.event.pull_request.merged
    name: Bump version
    strategy:
      max-parallel: 1
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.x ]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 #all
          token: ${{ secrets.GH_TOKEN_ACTION }}

      # see https://github.com/actions/runner/issues/655
      - name: Import environment variables from .env
        id: import-env
        shell: bash
        run: |
          while read line; do
            echo "$line" >> $GITHUB_ENV
          done < ${{ env.ENV_FILE }}

      - name: 'Make all scripts executable'
        run: chmod +x ${{ env.SCRIPTS_ROOT }}/*
        if: runner.os == 'Linux'

      - name: Prepare and describe working environment
        run: ${{ env.SCRIPTS_ROOT }}/setup-env-linux.sh

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Stage Python environment
        run: |
          pip install pipenv
          pipenv --where --venv --py --envs --support install --three --dev

      - name: Stage changes
        run: |
          export COMMIT_OLD_MSG=$(git log --format=%B -n1)
          export COMMIT_AUTHOR=$(git log --format=%an -n1)
          export COMMIT_AUTHOR_EMAIL=$(git log --format=%ae -n1)
          git config --global user.name "$COMMIT_AUTHOR"
          git config --global user.email "$COMMIT_AUTHOR_EMAIL"
          git config --global github.token ${{ secrets.GH_TOKEN_ACTION }}

      # bump version depending on pull request title convention

      - name: Bump patch version
        if: startsWith(github.event.pull_request.title, 'patch')
        run: |
          pipenv run bump2version patch ${{ env.BUMPVERSION_FLAGS }}
      - name: Bump minor version
        if: startsWith(github.event.pull_request.title, 'feature')
        run: |
          pipenv run bump2version minor ${{ env.BUMPVERSION_FLAGS }}
      - name: Bump major version
        if: startsWith(github.event.pull_request.title, 'major')
        run: |
          pipenv run bump2version major ${{ env.BUMPVERSION_FLAGS }}
      - name: Bump release
        if: startsWith(github.event.pull_request.title, 'release')
        run: |
          pipenv run bump2version release ${{ env.BUMPVERSION_FLAGS }}

      # amend last pr commit with  and push

      - name: Amend PR commit with bumped version
        id: pushtag
        run: |
          git add .bumpversion.cfg
          git add setup.py
          git commit --amend -m "${{ github.event.pull_request.title }}"
          git push --force
          git push --tag

      # TODO generate a release action
